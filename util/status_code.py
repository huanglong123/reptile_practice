# -*- coding: utf-8 -*-
""" 常用代码信息
    http代码：https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81
"""


class Code:
    """ 根据服务器返回的状态码，输出对应的中文信息说明，支持http、爬虫、邮件、短信等 """

    @staticmethod
    def http(status_code):
        """ http状态的信息内容 """
        http_info = {100: '继续。客户端应继续其请求',
                     101: '切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到HTTP的新版本协议',
                     200: '请求成功',
                     201: '已创建。成功请求并创建了新的资源',
                     202: '已接受。已经接受请求，但未处理完成',
                     203: '非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个来源',
                     204: '无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档',
                     205: '重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域',
                     206: '部分内容。服务器成功处理了部分GET请求',
                     300: '多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择',
                     301: '永久移动。请求的资源已被永久的移动到新URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替',
                     302: '临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI',
                     303: '查看其它地址。与301类似。使用GET和POST请求查看',
                     304: '未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。',
                     305: '使用代理。所请求的资源必须通过代理访问',
                     306: '已经被废弃的HTTP状态码',
                     307: '临时重定向。与302类似。使用GET请求重定向',
                     400: '由于明显的客户端错误（例如，格式错误的请求语法，太大的大小，无效的请求消息或欺骗性路由请求），服务器不能或不会处理该请求。',
                     401: '请求要求用户的身份认证',
                     402: '需要付费使用',
                     403: '服务器拒绝执行此请求',
                     404: '服务器无法根据客户端的请求找到资源（网页）',
                     405: '客户端请求中的方法被禁止',
                     406: '服务器无法根据客户端请求的内容特性完成请求',
                     407: '请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权',
                     408: '服务器等待客户端发送的请求时间过长，超时',
                     409: '服务器完成客户端的PUT请求是可能返回此代码，服务器处理请求时发生了冲突',
                     410: '客户端请求的资源已经不存在。410不同于404，如果资源以前有现在被永久删除了可使用410代码，可通过301代码指定资源的新位置',
                     411: '服务器无法处理客户端发送的不带Content-Length的请求信息',
                     412: '客户端请求信息的先决条件错误',
                     413: '由于请求的实体过大，服务器无法处理，因此拒绝请求。',
                     414: '请求的URI过长（URI通常为网址），服务器无法处理',
                     415: '服务器无法处理请求附带的媒体格式',
                     416: '客户端请求的范围无效',
                     417: '服务器无法满足Expect的请求头信息',
                     420: 'API在客户端被限速的情况下返回',
                     421: '该请求针对的是无法产生响应的服务器（例如因为连接重用）',
                     422: '请求格式正确，但是由于含有语义错误，无法响应。',
                     423: '当前资源被锁定。',
                     424: '由于之前的某个请求发生的错误，导致当前请求失败',
                     426: '客户端应当切换到TLS/1.0，并在HTTP/1.1 Upgrade header中给出。',
                     428: '原服务器要求该请求满足一定条件。',
                     429: '用户在给定的时间内发送了太多的请求。旨在用于网络限速。',
                     431: '服务器不愿处理请求，因为一个或多个头字段过大。',
                     444: '服务器不向客户端返回任何信息，并关闭连接（有助于阻止恶意软件）。',
                     451: '该访问因法律的要求而被拒绝',
                     500: '服务器内部错误，无法完成请求',
                     501: '服务器不支持请求的功能，无法完成请求',
                     502: '充当网关或代理的服务器，从远端服务器接收到了一个无效的请求',
                     503: '由于请求过多或系统维护，服务器暂时的无法处理客户端的请求',
                     504: '网关超时，未及时从远端服务器获取请求',
                     505: '服务器不支持请求的HTTP协议的版本，无法完成处理',
                }

        return http_info.get(status_code)

    @staticmethod
    def req(status_code):
        """ 爬虫相关的信息内容 """
        req_info = {600: '程序出错',
                    601: '对方网站需要登录和身份验证',
                    602: '外部请求出错(访问对方网站出错）',
                    603: '被对方网站拒绝(请求方式错误或者请求频率太高被对方拒绝）',
                    604: '请求正常，已经下架',
                    607: '请求正常，程序错误造成解析页面内容出错',
                    608: '对方网站请求超时',
                    609: '请求正常，解析页面内容无输出',
                    610: '查询正常，无结果',
                    612: '爬取页面需要的请求信息的先决条件错误',
                    613: '权限不足，爬虫拒绝服务',
                    616: '你请求的方法未实现（请求的参数错误)',
                    618: '请求正常，但数据为空(对方网站返回空数据）',
        }

        return req_info.get(status_code, Code.http(status_code))

code_info = Code()

if __name__ == '__main__':
    print(404, code_info.http(404))
    print(618, code_info.req(618))
    print(502, code_info.req(502))
